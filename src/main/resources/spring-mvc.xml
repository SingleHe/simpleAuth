<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:property-placeholder location="classpath:resources.properties"/>
    <!--开启controller注解-->
    <!--
         1.如果没有配置<context:component-scan>的use-default-filters属性，则默认为true，
         在创建ClassPathBeanDefinitionScanner时会根据use-default-filters是否为true来调用
         2.不仅仅扫描@Controller，还扫描@Service/@Repository的Bean，可能造成一些问题:
         则service、dao层的bean可能也重新加载了，但事务的AOP代理没有配置在springmvc配置文件中，
         从而造成新加载的bean覆盖了老的bean，造成事务失效。
    -->
    <context:component-scan base-package="com.singlehe.shiro.web.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 当在web.xml中， DispatcherServlet使用<url-pattern></url-pattern>映射时，能映射静态资源 -->
    <mvc:default-servlet-handler/>
    <!--静态资源映射: 将/static/** 映射到了 /WEB-INF/Static/ 路径下；这样允许静态资源放在任何地方-->
    <mvc:resources mapping="/static/**" location="/WEB-INF/static/"/>

    <!--默认的视图解析器 在上边的解析错误时使用 (默认使用html)-->
    <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="1">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="/WEB-INF/jsp"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>



</beans>